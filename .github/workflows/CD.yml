name: CD

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  test_rails:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5 

    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    - name: Install PostgreSQL 11 client
      run: | 
        sudo apt-get -yqq install libpq-dev
    - name: bundle install
      run: | 
        gem install bundler
        bundle install --jobs 4 --retry 3
        
    - name: Setup Database
      run: | 
        cp config/database.yml.github-actions config/database.yml
        bundle exec rake db:create
        bundle exec rake db:schema:load
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    - name: Run RSpec
      run: COVERAGE=true bundle exec rspec
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
  
  test_react:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      working-directory: ./client 
      run: | 
        npm ci
        npm run build --if-present
        npm test 
      env:
        CI: true

  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Executing remote command
      uses: appleboy/ssh-action@master
      env: 
         POSTGRES_USER: ${{ secrets.POSTGRES_USER }} 
         POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} 
         POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 
         POSTGRES_DB: ${{ secrets.POSTGRES_DB }} 
         SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_HOST,POSTGRES_DB,SECRET_KEY_BASE
        script: |
          cd /var/www/raustin-portfolio
          git pull
          source /usr/local/rvm/scripts/rvm
          rvm use --default 2.6.6
          bundle install
          source ~/.bashrc
          passenger stop -p 8080
          passenger start -a 127.0.0.1 -p 8080 -d -e production
          cd client
          npm install
          npm run build
          sudo service nginx restart
          echo "done"